
/*

When a user clicks the "POST STATUS" button, the View should call a "post status" operation on a
Presenter that posts the status to the server
(although there isn't actually a server yet).
Next, the Presenter's "post status" operation should:


1. Instruct the View to display a "Posting Status..." message.
2. Create a Status object and call a Service to send it to the server.
3. Instruct the View to display one of the following messages telling the user the outcome of the post operation:
    a. "Successfully Posted!"
    b. "Failed to post status: <ERROR MESSAGE>"
    c. "Failed to post status because of exception: <EXCEPTION MESSAGE>"

Using JUnit and Mockito, write automated UNIT tests to verify the following:

The Presenter's "post status" operation works correctly in all three of the outcomes listed above
(succeeded, failed, failed due to exception).
All parameters passed by the Presenter to the Service's "post status" operation are correct.

This will require you to create mocks/spies for the View, Presenter, and Service.
 */